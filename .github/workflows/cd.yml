name: CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      # 1️ Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️ Set up kubectl - MODIFIED TO REMOVE SUDO AND USE $HOME/bin
      - name: Set up kubectl
        run: |
          # Create $HOME/bin directory if it doesn't exist
          mkdir -p $HOME/bin
          
          # Download kubectl
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          
          # Make executable and move to user's bin path (no sudo required)
          chmod +x kubectl
          mv kubectl $HOME/bin/
          
          # Add the user's bin path to the system PATH for this job
          echo "$HOME/bin" >> $GITHUB_PATH
          
          # Verification (Optional)
          echo "kubectl installed to: $(which kubectl)"

      # 3️ Set up Helm - NO CHANGE NEEDED
      - name: Set up Helm
        run: |
          # The Helm script installs to $HOME/.local/bin, which is typically on the PATH
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      # 4️ Deploy Helm chart
      - name: Deploy Helm chart
        env:
          IMAGE: sushmita04/nodejs-app:latest
        run: |
          echo " Deploying Helm chart with image: $IMAGE"

          # Use absolute path to your devops repo (chart location)
          helm upgrade --install node-release /home/optit/devops \
            --namespace default \
            --create-namespace \
            --set image.repository=$(echo $IMAGE | cut -d: -f1) \
            --set image.tag=$(echo $IMAGE | cut -d: -f2) \
            -f /home/optit/devops/values.yaml \
            --force

          echo " Helm release 'node-release' deployed successfully."

      # 5️ Verify Deployment - NO CHANGE NEEDED
      - name: Verify Deployment
        run: |
          DEPLOYMENT_NAME="node-release-nodejs"

          echo " Restarting deployment: $DEPLOYMENT_NAME"
          kubectl rollout restart deployment $DEPLOYMENT_NAME -n default

          echo " Waiting for rollout to complete..."
          kubectl rollout status deployment $DEPLOYMENT_NAME -n default

          echo " Listing current pods:"
          kubectl get pods -n default
